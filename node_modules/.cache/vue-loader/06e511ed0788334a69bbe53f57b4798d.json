{"remainingRequest":"/var/www/html/contacts/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/contacts/src/views/Contact.vue?vue&type=style&index=0&id=df212a54&scoped=true&lang=css&","dependencies":[{"path":"/var/www/html/contacts/src/views/Contact.vue","mtime":1599506575941},{"path":"/var/www/html/contacts/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/contacts/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/contacts/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/contacts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/contacts/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi4vYXNzZXRzL2Nzcy9zdHlsZXMuY3NzJzsK"},{"version":3,"sources":["Contact.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA","file":"Contact.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <preloader/>\n\n        <div class=\"section\">\n            <!-- Back to the contacts -->\n            <router-link to=\"/\">\n                <div title=\"Back\" class=\"back-button\"><img v-lazyload :data-src=\"url.back\" alt=\"Back\"></div>\n            </router-link>\n\n            <!-- Basic contact info -->\n            <vue-initials-img :name=\"contact.name\" :title=\"contact.name\" class=\"contact-initials-big\"/>\n            <input type=\"text\" :value=\"contact.name\" class=\"contact-info-input contact-name-input\">\n\n            <!-- Additional indo -->\n            <div class=\"additional-info-add-button\" @click=\"addNewField\">Add new field</div>\n\n            <div v-for=\"(field, index) in fields\" :key=\"field.id\">\n                <input type=\"text\" placeholder=\"Age\" class=\"additional-info-key\" v-model=\"field.key\"> {{ field.key }}  \n                <input type=\"text\" placeholder=\"24\" class=\"additional-info-value\" v-model=\"field.value\"> {{ field.value }}\n                <button @click=\"openConfirmationWindow(index)\">Delete</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Vue from 'vue'\n\n// Components\nimport preloader from '@/components/preloader'\n\n// Contact photo - initials\nimport VueInitialsImg from 'vue-initials-img'\nVue.use(VueInitialsImg);\n\n// Utils\nimport lazyload from '@/components/utils/lazyload'\n\nexport default {\n    name: 'Contacts',\n    components: {\n        preloader,\n    },\n\n    props: {\n        preloader: { type: Object, default: () => ({}) }\n    },\n\n    data: () => ({\n        // Images\n        url: {\n            add: require('../assets/img/add.png'),\n            remove: require('../assets/img/remove.png'),\n            back: require('../assets/img/down-arrow.png'),\n        },\n\n        // Related to contact\n        contacts: null,\n        contact: null,\n\n        // Additional contact info\n        fields: [],\n    }),\n\n    methods: {\n        addNewField () {\n            // Create new info about contact\n            this.fields.push({\n                key: '',\n                value: '',\n            });\n        },\n\n        openConfirmationWindow (index) {\n\n        }\n    },\n\n    mounted () {\n\n    },\n    \n    watch: {\n        // Check for contact updates\n        contact (updatedContact) {\n\n        }\n    },\n\n    created () {\n        // Load all contacts from the local storage\n        if (localStorage.contacts) {\n            this.contacts = JSON.parse(localStorage.contacts);\n        }\n\n        // Find the contact in a contacts list\n        for (var i = 0; i < this.contacts.length; i++) {\n            if (this.contacts[i].name === this.$route.params.name) {\n                // Saving contact info\n                this.contact = this.contacts[i];\n\n                return;\n            }\n        }\n\n        // If there is no contact user is looking for \n        this.$router.push('../notFound');\n    },\n\n    directives: {\n        lazyload\n    }\n}\n</script>\n\n<style scoped>\n    @import '../assets/css/styles.css';\n</style>"]}]}