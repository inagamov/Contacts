{"remainingRequest":"/var/www/html/Contacts/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Contacts/src/views/Contacts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Contacts/src/views/Contacts.vue","mtime":1600191392931},{"path":"/var/www/html/Contacts/node_modules/cache-loader/dist/cjs.js","mtime":1599838275000},{"path":"/var/www/html/Contacts/node_modules/vue-loader/lib/index.js","mtime":1599838275000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJwoKLy8gQ29tcG9uZW50cwppbXBvcnQgcHJlbG9hZGVyIGZyb20gJ0AvY29tcG9uZW50cy9wcmVsb2FkZXInCgovLyBDb250YWN0IHBob3RvIC0gaW5pdGlhbHMKaW1wb3J0IFZ1ZUluaXRpYWxzSW1nIGZyb20gJ3Z1ZS1pbml0aWFscy1pbWcnClZ1ZS51c2UoVnVlSW5pdGlhbHNJbWcpOwoKLy8gVXRpbHMKaW1wb3J0IGxhenlsb2FkIGZyb20gJ0AvY29tcG9uZW50cy91dGlscy9sYXp5bG9hZCcKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdDb250YWN0cycsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgcHJlbG9hZGVyLAogICAgfSwKCiAgICBwcm9wczogewogICAgICAgIHByZWxvYWRlcjogeyB0eXBlOiBPYmplY3QsIGRlZmF1bHQ6ICgpID0+ICh7fSkgfQogICAgfSwKCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIC8vIEltYWdlcwogICAgICAgIHVybDogewogICAgICAgICAgICBhZGQ6IHJlcXVpcmUoJy4uL2Fzc2V0cy9pbWcvYWRkLnBuZycpLAogICAgICAgICAgICByZW1vdmU6IHJlcXVpcmUoJy4uL2Fzc2V0cy9pbWcvcmVtb3ZlLnBuZycpLAogICAgICAgIH0sCgogICAgICAgIC8vIFJlbGF0ZWQgdG8gY29udGFjdHMKICAgICAgICBjb250YWN0czogW10sCiAgICAgICAgbmV3Q29udGFjdE5hbWU6ICcnLAogICAgICAgIGNvbnRhY3RUb1JlbW92ZTogbnVsbCwKICAgIH0pLAoKICAgIG1ldGhvZHM6IHsKICAgICAgICBhZGRDb250YWN0ICgpIHsKICAgICAgICAgICAgLy8gQ2hlY2sgaWYgaW5wdXQgaXMgZW1wdHkKICAgICAgICAgICAgaWYgKHRoaXMubmV3Q29udGFjdE5hbWUgIT0gJycpIHsKICAgICAgICAgICAgICAgIC8vIFB1c2ggbmV3IGNvbnRhY3QgdG8gdGhlIGNvbnRhY3RzIGxpc3QKICAgICAgICAgICAgICAgIHRoaXMuY29udGFjdHMucHVzaCh7aWQ6IHRoaXMuY29udGFjdHMubGVuZ3RoICsgMSwgbmFtZTogdGhpcy5uZXdDb250YWN0TmFtZX0pOwoKICAgICAgICAgICAgICAgIC8vIENsZWFyIHRoZSBpbnB1dAogICAgICAgICAgICAgICAgdGhpcy5uZXdDb250YWN0TmFtZSA9ICcnOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgb3BlbkNvbmZpcm1hdGlvbldpbmRvdyAoY29udGFjdCkgewogICAgICAgICAgICAvLyBPcGVuIGNvbmZpcm1hdGlvbiB3aW5kb3cKICAgICAgICAgICAgdGhpcy5jb250YWN0VG9SZW1vdmUgPSBjb250YWN0OwogICAgICAgIH0sCgogICAgICAgIGNsb3NlQ29uZmlybWF0aW9uV2luZG93ICgpIHsKICAgICAgICAgICAgLy8gQ2xvc2UgY29uZmlybWF0aW9uIHdpbmRvdwogICAgICAgICAgICB0aGlzLmNvbnRhY3RUb1JlbW92ZSA9IG51bGw7CiAgICAgICAgfSwKCiAgICAgICAgcmVtb3ZlQ29udGFjdCAoKSB7CiAgICAgICAgICAgIC8vIEZpbmQgdGhlIGNvbnRhY3QgaW4gYSBjb250YWN0cyBsaXN0CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jb250YWN0cy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuY29udGFjdHNbaV0ubmFtZSA9PT0gdGhpcy5jb250YWN0VG9SZW1vdmUubmFtZSkgewogICAgICAgICAgICAgICAgICAgIC8vIFJlbW92ZSBmb3VuZCBjb250YWN0IGZyb20gdGhlIGxpc3QKICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRhY3RzLnNwbGljZShpLCAxKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ2xvc2UgY29uZmlybWF0aW9uIHdpbmRvdwogICAgICAgICAgICB0aGlzLmNsb3NlQ29uZmlybWF0aW9uV2luZG93KCk7CiAgICAgICAgfQogICAgfSwKCiAgICBtb3VudGVkICgpIHsKICAgICAgICAvLyBJZiB0aGVyZSBhbHJlYWR5IGFyZSBzb21lIGNvbnRhY3RzIGluIHRoZSBsb2NhbCBzdG9yYWdlCiAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5jb250YWN0cykgewogICAgICAgICAgICB0aGlzLmNvbnRhY3RzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuY29udGFjdHMpOwogICAgICAgIH0KICAgIH0sCgogICAgd2F0Y2g6IHsKICAgICAgICAvLyBDaGVjayBmb3IgY29udGFjdHMgbGlzdCB1cGRhdGVzCiAgICAgICAgY29udGFjdHMgKHVwZGF0ZWRDb250YWN0c0xpc3QpIHsKICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmNvbnRhY3RzID0gSlNPTi5zdHJpbmdpZnkodXBkYXRlZENvbnRhY3RzTGlzdCk7CiAgICAgICAgfQogICAgfSwKCiAgICBkaXJlY3RpdmVzOiB7CiAgICAgICAgbGF6eWxvYWQKICAgIH0KfQo="},{"version":3,"sources":["Contacts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Contacts.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <preloader/>\n\n        <!-- Background to close confirmation window -->\n        <div class=\"full-window-size-window\" v-if=\"contactToRemove\" @click=\"closeConfirmationWindow\"></div>\n\n        <div class=\"container\">\n            <!-- Top bar to add new contact -->\n            <form class=\"contact-list-header\" @submit.prevent=\"addContact\">\n                <input class=\"contact-list-header__input\" type=\"text\" placeholder=\"Tyoma Inagamov\" v-model=\"newContactName\">\n                <button class=\"contact-list-header__button\" type=\"submit\" title=\"Add contact\"><img v-lazyload :data-src=\"url.add\" alt=\"Add contact\"></button>\n            </form>\n\n            <!-- Message if user has no contacts -->\n            <p v-if=\"!contacts[0]\" class=\"message-text\">You don't have any contacts yet.</p>\n\n            <!-- Contacts list -->\n            <div v-for=\"contact in contacts\" :key=\"contact.id\">\n                <router-link :to=\"`/Contact/${contact.id}`\" class=\"contact-item\">\n                    <vue-initials-img :name=\"contact.name\" :title=\"contact.name\" class=\"contact-item__initials\"/>\n                    <p class=\"contact-item__name\" :title=\"contact.name\">{{ contact.name }}</p>\n                    <div class=\"contact-item__button\" title=\"Remove contact\"><img v-lazyload :data-src=\"url.remove\" alt=\"Remove contact\" @click.prevent=\"openConfirmationWindow(contact)\"></div>\n                </router-link>\n            </div>\n\n            <!-- Confirmation window -->\n            <div class=\"modal\" v-if=\"contactToRemove\" @keyup.enter=\"removeContact\">\n                <p class=\"message-text\">Are you sure you want to remove <span class=\"modal__highlighted-text\">{{ contactToRemove.name }}</span>?</p>\n\n                <div class=\"modal__actions\">\n                    <div class=\"modal__cancel\" @click=\"closeConfirmationWindow\">Cancel</div>\n                    <div class=\"modal__continue\" @click=\"removeContact\">Remove</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Vue from 'vue'\n\n// Components\nimport preloader from '@/components/preloader'\n\n// Contact photo - initials\nimport VueInitialsImg from 'vue-initials-img'\nVue.use(VueInitialsImg);\n\n// Utils\nimport lazyload from '@/components/utils/lazyload'\n\nexport default {\n    name: 'Contacts',\n    components: {\n        preloader,\n    },\n\n    props: {\n        preloader: { type: Object, default: () => ({}) }\n    },\n\n    data: () => ({\n        // Images\n        url: {\n            add: require('../assets/img/add.png'),\n            remove: require('../assets/img/remove.png'),\n        },\n\n        // Related to contacts\n        contacts: [],\n        newContactName: '',\n        contactToRemove: null,\n    }),\n\n    methods: {\n        addContact () {\n            // Check if input is empty\n            if (this.newContactName != '') {\n                // Push new contact to the contacts list\n                this.contacts.push({id: this.contacts.length + 1, name: this.newContactName});\n\n                // Clear the input\n                this.newContactName = '';\n            }\n        },\n\n        openConfirmationWindow (contact) {\n            // Open confirmation window\n            this.contactToRemove = contact;\n        },\n\n        closeConfirmationWindow () {\n            // Close confirmation window\n            this.contactToRemove = null;\n        },\n\n        removeContact () {\n            // Find the contact in a contacts list\n            for (var i = 0; i < this.contacts.length; i++) {\n                if (this.contacts[i].name === this.contactToRemove.name) {\n                    // Remove found contact from the list\n                    this.contacts.splice(i, 1);\n                }\n            }\n\n            // Close confirmation window\n            this.closeConfirmationWindow();\n        }\n    },\n\n    mounted () {\n        // If there already are some contacts in the local storage\n        if (localStorage.contacts) {\n            this.contacts = JSON.parse(localStorage.contacts);\n        }\n    },\n\n    watch: {\n        // Check for contacts list updates\n        contacts (updatedContactsList) {\n            localStorage.contacts = JSON.stringify(updatedContactsList);\n        }\n    },\n\n    directives: {\n        lazyload\n    }\n}\n</script>\n\n<style scoped>\n    @import '../assets/css/styles.css';\n</style>"]}]}